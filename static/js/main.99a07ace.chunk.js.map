{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Sytweet.js","components/SytweetFactory.js","routes/Home.js","components/Navigation.js","routes/Profile.js","components/Router.js","components/App.js","index.js"],"names":["firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","dbService","storageService","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","e","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","auth","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Sytweet","sytweetObj","isOwner","editing","setEditing","text","newSytweet","setNewSytweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","autoFocus","src","class","faTrash","faPencilAlt","SytweetFactory","userObj","sytweet","setSytweet","attachment","setAttachment","fileRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","sytweets","setSytweets","useEffect","onSnapshot","snapshot","sytweetArray","docs","map","marginTop","key","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","displayName","refreshUser","history","useHistory","newDisplayName","setNewDisplayName","getMySytweets","where","orderBy","get","updateProfile","signOut","push","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","Profile","from","App","user","currentUser","init","setInit","setUserObj","onAuthStateChanged","args","getFullYear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.99a07ace.chunk.js","sourcesContent":["import * as firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\n// firebase 프로젝트 생성시 config 정보\r\n/**\r\n * [#1.1 Securing the Keys]\r\n * .env파일에 변수로 만들어줌 (REACT_APP_을 앞에 붙여야 하는게 rule)\r\n * .env는 gitignore에 포함되어있으므로 내 정보를 github에 올리지 않음 (보안을 위함? ㄴㄴ 그냥 깃허브에만 올리지 않는 것)\r\n * => 하지만 완전히 막을 수 있는 것은 아니다.\r\n * 아예 숨길 수 있게 해주지 않음\r\n */\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\n\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();\r\n","import { authService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst AuthForm = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [newAccount, setNewAccount] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const onChange = (e) => {\r\n    const {\r\n      target: { name, value },\r\n    } = e;\r\n    if (name === \"email\") {\r\n      setEmail(value);\r\n    } else if (name === \"password\") {\r\n      setPassword(value);\r\n    }\r\n  };\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      let data;\r\n      if (newAccount) {\r\n        // create account\r\n        data = await authService.createUserWithEmailAndPassword(\r\n          email,\r\n          password\r\n        );\r\n      } else {\r\n        // log in\r\n        data = await authService.signInWithEmailAndPassword(email, password);\r\n      }\r\n      console.log(data);\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n\r\n  const toggleAccount = () => setNewAccount((prev) => !prev);\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit} className=\"container\">\r\n        <input\r\n          name=\"email\"\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          required\r\n          value={email}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          name=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          required\r\n          value={password}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value={newAccount ? \"Create Account\" : \"Sign in\"}\r\n          className=\"authInput authSubmit\"\r\n        />\r\n        {error && <span className=\"authError\">{error}</span>}\r\n      </form>\r\n      <span onClick={toggleAccount} className=\"authSwitch\">\r\n        {newAccount ? \"Sign in\" : \"Create Account\"}\r\n      </span>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTwitter,\r\n  faGoogle,\r\n  faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\nimport { authService, firebaseInstance } from \"fbase\";\r\nimport AuthForm from \"components/AuthForm\";\r\n\r\nconst Auth = () => {\r\n  const onSocialClick = (e) => {\r\n    const {\r\n      target: { name },\r\n    } = e;\r\n    let provider;\r\n    if (name === \"google\") {\r\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n    } else if (name === \"github\") {\r\n      provider = new firebaseInstance.auth.GithubAuthProvider();\r\n    }\r\n    var data = authService.signInWithPopup(provider);\r\n    console.log(data);\r\n  };\r\n\r\n  return (\r\n    <div className=\"authContainer\">\r\n      <FontAwesomeIcon\r\n        icon={faTwitter}\r\n        color={\"#04AAFF\"}\r\n        size=\"3x\"\r\n        style={{ marginBottom: 30 }}\r\n      />\r\n      <AuthForm />\r\n      <div className=\"authBtns\">\r\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n          Continue with Google\r\n          <FontAwesomeIcon icon={faGoogle} />\r\n        </button>\r\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\r\n          Continue with Github\r\n          <FontAwesomeIcon icon={faGithub} />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Auth;\r\n","import { dbService, storageService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Sytweet = ({ sytweetObj, isOwner }) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const [newSytweet, setNewSytweet] = useState(sytweetObj.text);\r\n\r\n  const onDeleteClick = async () => {\r\n    const ok = window.confirm(\"Are you sure you want to delete this sytweet?\");\r\n    if (ok) {\r\n      await dbService.doc(`sytweets/${sytweetObj.id}`).delete();\r\n      await storageService.refFromURL(sytweetObj.attachmentUrl).delete();\r\n    }\r\n  };\r\n\r\n  const toggleEditing = () => {\r\n    setEditing((prev) => !prev);\r\n  };\r\n\r\n  const onChange = (e) => {\r\n    const {\r\n      target: { value },\r\n    } = e;\r\n    setNewSytweet(value);\r\n  };\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    // console.log(sytweetObj, newSytweet);\r\n    await dbService.doc(`sytweets/${sytweetObj.id}`).update({\r\n      text: newSytweet,\r\n    });\r\n    setEditing(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"nweet\">\r\n      {editing ? (\r\n        <>\r\n          <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Edit your Sytweet\"\r\n              value={newSytweet}\r\n              required\r\n              autoFocus\r\n              onChange={onChange}\r\n              className=\"formInput\"\r\n            />\r\n            <input type=\"submit\" value=\"Update Sytweet\" className=\"formBtn\" />\r\n          </form>\r\n          <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n            Cancel\r\n          </span>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <h4>{sytweetObj.text}</h4>\r\n          {sytweetObj.attachmentUrl && <img src={sytweetObj.attachmentUrl} />}\r\n          {isOwner && (\r\n            <div class=\"nweet__actions\">\r\n              <span onClick={onDeleteClick}>\r\n                {\" \"}\r\n                <FontAwesomeIcon icon={faTrash} />\r\n              </span>\r\n              <span onClick={toggleEditing}>\r\n                <FontAwesomeIcon icon={faPencilAlt} />\r\n              </span>\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default Sytweet;\r\n","import React, { useState } from \"react\";\r\nimport { dbService, storageService } from \"fbase\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst SytweetFactory = ({ userObj }) => {\r\n  const [sytweet, setSytweet] = useState(\"\");\r\n  const [attachment, setAttachment] = useState(\"\");\r\n\r\n  const onSubmit = async (e) => {\r\n    if (sytweet === \"\") {\r\n      return;\r\n    }\r\n    e.preventDefault();\r\n    let attachmentUrl = \"\";\r\n    if (attachment !== \"\") {\r\n      const fileRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\r\n      const response = await fileRef.putString(attachment, \"data_url\");\r\n      attachmentUrl = await response.ref.getDownloadURL();\r\n    }\r\n    const sytweetObj = {\r\n      text: sytweet,\r\n      createdAt: Date.now(),\r\n      creatorId: userObj.uid,\r\n      attachmentUrl,\r\n    };\r\n    await dbService.collection(\"sytweets\").add(sytweetObj);\r\n    setSytweet(\"\");\r\n    setAttachment(\"\");\r\n  };\r\n\r\n  const onChange = (e) => {\r\n    const {\r\n      target: { value },\r\n    } = e;\r\n    setSytweet(value);\r\n  };\r\n\r\n  const onFileChange = (e) => {\r\n    const {\r\n      target: { files },\r\n    } = e;\r\n    const theFile = files[0];\r\n    const reader = new FileReader();\r\n    reader.onloadend = (finishedEvent) => {\r\n      //reader.readAsDataURL(theFile); 가 끝나면 실행되는 리스너\r\n      const {\r\n        currentTarget: { result },\r\n      } = finishedEvent;\r\n      setAttachment(result);\r\n    };\r\n    reader.readAsDataURL(theFile);\r\n  };\r\n\r\n  const onClearAttachment = () => {\r\n    setAttachment(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={onSubmit} className=\"factoryForm\">\r\n      <div className=\"factoryInput__container\">\r\n        <input\r\n          className=\"factoryInput__input\"\r\n          value={sytweet}\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          placeholder=\"What's on your mind?\"\r\n          maxLength={120}\r\n        />\r\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n      </div>\r\n      <label for=\"attach-file\" className=\"factoryInput__label\">\r\n        <span>Add photos</span>\r\n        <FontAwesomeIcon icon={faPlus} />\r\n      </label>\r\n      <input\r\n        id=\"attach-file\"\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        onChange={onFileChange}\r\n        style={{\r\n          opacity: 0,\r\n        }}\r\n      />\r\n      {attachment && (\r\n        <div className=\"factoryForm__attachment\">\r\n          <img\r\n            src={attachment}\r\n            style={{\r\n              backgroundImage: attachment,\r\n            }}\r\n          />\r\n          <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n            <span>Remove</span>\r\n            <FontAwesomeIcon icon={faTimes} />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </form>\r\n  );\r\n};\r\nexport default SytweetFactory;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { dbService } from \"fbase\";\r\nimport Sytweet from \"components/Sytweet\";\r\nimport SytweetFactory from \"components/SytweetFactory\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Home = ({ userObj }) => {\r\n  const [sytweets, setSytweets] = useState([]);\r\n\r\n  useEffect(() => {\r\n    dbService.collection(\"sytweets\").onSnapshot((snapshot) => {\r\n      const sytweetArray = snapshot.docs.map((doc) => ({\r\n        id: doc.id,\r\n        ...doc.data(),\r\n      }));\r\n      setSytweets(sytweetArray);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <SytweetFactory userObj={userObj} />\r\n      <div style={{ marginTop: 30 }}>\r\n        {sytweets.map((sytweet) => (\r\n          <Sytweet\r\n            key={sytweet.id}\r\n            sytweetObj={sytweet}\r\n            isOwner={sytweet.creatorId === userObj.uid}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation = ({ userObj }) => {\r\n  return (\r\n    <nav>\r\n      <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n        <li>\r\n          <Link to=\"/\" style={{ marginRight: 10 }}>\r\n            <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link\r\n            to=\"/profile\"\r\n            style={{\r\n              marginLeft: 10,\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              alignItems: \"center\",\r\n              fontSize: 12,\r\n            }}\r\n          >\r\n            <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n            <span style={{ marginTop: 10 }}>\r\n              {userObj.displayName\r\n                ? `${userObj.displayName}'s Profile`\r\n                : \"Profile\"}\r\n            </span>\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { authService, dbService } from \"fbase\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default ({ refreshUser, userObj }) => {\r\n  const history = useHistory();\r\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n\r\n  const onLogOutClick = () => {\r\n    authService.signOut();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  const getMySytweets = async () => {\r\n    const sytweets = await dbService\r\n      .collection(\"sytweets\")\r\n      .where(\"creatorId\", \"==\", userObj.uid)\r\n      .orderBy(\"createdAt\")\r\n      .get();\r\n    console.log(sytweets.docs.map((doc) => doc.data));\r\n  };\r\n\r\n  useEffect(() => {\r\n    getMySytweets();\r\n  }, []);\r\n\r\n  const onChange = (e) => {\r\n    const {\r\n      target: { value },\r\n    } = e;\r\n    setNewDisplayName(value);\r\n  };\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (userObj.displayName !== newDisplayName) {\r\n      await userObj.updateProfile({ displayName: newDisplayName });\r\n      refreshUser();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <form onSubmit={onSubmit} className=\"profileForm\">\r\n        <input\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          autoFocus\r\n          placeholder=\"Display Name\"\r\n          value={newDisplayName}\r\n          className=\"formInput\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value=\"Update Profile\"\r\n          className=\"formBtn\"\r\n          style={{\r\n            marginTop: 10,\r\n          }}\r\n        />\r\n      </form>\r\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n        Log Out\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  HashRouter as Router,\r\n  Redirect,\r\n  Route,\r\n  Switch,\r\n} from \"react-router-dom\";\r\nimport Auth from \"routes/Auth\";\r\nimport Home from \"routes/Home\";\r\nimport Navigation from \"components/Navigation\";\r\nimport Profile from \"routes/Profile\";\r\n\r\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\r\n  return (\r\n    <Router>\r\n      {isLoggedIn && <Navigation userObj={userObj} />}\r\n      <Switch>\r\n        {isLoggedIn ? (\r\n          <div\r\n            style={{\r\n              maxWidth: 890,\r\n              width: \"100%\",\r\n              margin: \"0 auto\",\r\n              marginTop: 80,\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <Route exact path=\"/\">\r\n              <Home userObj={userObj} />\r\n            </Route>\r\n            <Route exact path=\"/profile\">\r\n              <Profile userObj={userObj} refreshUser={refreshUser} />\r\n            </Route>\r\n            <Redirect from=\"*\" to=\"/\" />\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <Route exact path=\"/\">\r\n              <Auth />\r\n            </Route>\r\n            <Redirect from=\"*\" to=\"/\" />\r\n          </>\r\n        )}\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import React, { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\n\nfunction App() {\n  const user = authService.currentUser;\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n        setUserObj(user);\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n    return () => {};\n  }, []);\n\n  const refreshUser = () => {\n    // setUserObj(authService.currentUser);\n    // currentUser정보가 바껴도 적용이 안되는이유: 객체 크기가 너무 커서..!\n    // 해결: 1) object크기를 줄인다.\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n    // setUserObj(Object.assign({}, user));\n  };\n\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          isLoggedIn={user}\n          userObj={userObj}\n        />\n      ) : (\n        \"Initializing...\"\n      )}\n      <footer>&copy; sytwitter {new Date().getFullYear()}</footer>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./styles.css\";\n// import fbase from \"fbase\";\n\n// console.log(fbase); // firebase 연결 확인\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}